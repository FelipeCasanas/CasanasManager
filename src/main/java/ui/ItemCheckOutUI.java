/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import controller.BusinessModel;
import utilities.IOOperations;
import utilities.Printing;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JComboBox;
import network.BusinessItems;
import network.Item;
import network.Checkout;

/**
 *
 * @author Felipe
 */
public class ItemCheckOutUI extends javax.swing.JFrame {

    public ItemCheckOutUI() {
        initComponents();

        setStateSelector();

        itemDepartureOwnerID.setText("Documento del cliente");
        itemDepartureIdentifiquer.setText("Identificador del producto");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        vehicleCheckInTitleLabel = new javax.swing.JLabel();
        itemDepartureState = new javax.swing.JComboBox<>();
        itemDepartureOwnerID = new javax.swing.JTextField();
        itemDepartureIdentifiquer = new javax.swing.JTextField();
        itemDepartureButton = new javax.swing.JButton();
        branding = new javax.swing.JPanel();
        goBackButton = new javax.swing.JButton();
        developerLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(440, 250));
        setName("itemCheckout"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vehicleCheckInTitleLabel.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 24)); // NOI18N
        vehicleCheckInTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        vehicleCheckInTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehicleCheckInTitleLabel.setText("SALIDA ARTICULO");
        getContentPane().add(vehicleCheckInTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 50));

        itemDepartureState.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 18)); // NOI18N
        itemDepartureState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        itemDepartureState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(itemDepartureState, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 175, -1));

        itemDepartureOwnerID.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 18)); // NOI18N
        itemDepartureOwnerID.setForeground(new java.awt.Color(0, 102, 153));
        itemDepartureOwnerID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemDepartureOwnerID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemDepartureOwnerIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemDepartureOwnerIDFocusLost(evt);
            }
        });
        getContentPane().add(itemDepartureOwnerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 175, -1));

        itemDepartureIdentifiquer.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 18)); // NOI18N
        itemDepartureIdentifiquer.setForeground(new java.awt.Color(0, 102, 153));
        itemDepartureIdentifiquer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemDepartureIdentifiquer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemDepartureIdentifiquerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemDepartureIdentifiquerFocusLost(evt);
            }
        });
        getContentPane().add(itemDepartureIdentifiquer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 175, -1));

        itemDepartureButton.setBackground(new java.awt.Color(0, 153, 51));
        itemDepartureButton.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 18)); // NOI18N
        itemDepartureButton.setForeground(new java.awt.Color(255, 255, 255));
        itemDepartureButton.setText("DAR SALIDA");
        itemDepartureButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemDepartureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDepartureButtonActionPerformed(evt);
            }
        });
        getContentPane().add(itemDepartureButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 175, -1));

        branding.setBackground(new java.awt.Color(255, 255, 255));
        branding.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        goBackButton.setBackground(new java.awt.Color(204, 0, 0));
        goBackButton.setForeground(new java.awt.Color(255, 255, 255));
        goBackButton.setText("<-");
        goBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });
        branding.add(goBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 70, 30));

        developerLabel.setFont(new java.awt.Font("Gill Sans MT Condensed", 2, 18)); // NOI18N
        developerLabel.setForeground(new java.awt.Color(0, 0, 0));
        developerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        developerLabel.setText("CASANAS SOFTWARE");
        branding.add(developerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, 440, 40));

        getContentPane().add(branding, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 440, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpeg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 250));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setSelector(JComboBox<String> selector, ArrayList<Object> data, int index) {
        ArrayList<String> names = (ArrayList<String>) data.get(index);

        if (names != null && !names.isEmpty()) {
            names.forEach(name -> selector.addItem(name.toUpperCase()));
        } else {
            System.out.println("No se encontraron elementos para agregar al selector.");
        }
    }

    private void setStateSelector() {
        ArrayList<Object> states = BusinessItems.getStatesName();
        setSelector(itemDepartureState, states, 1);
    }


    private void itemDepartureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDepartureButtonActionPerformed
        // Definir los campos a verificar y los datos de la entrada
        String[] fields = {"estado", "cedula", "placa"};
        String[] itemInputData = new String[3];

        // Obtener y procesar los datos de entrada
        itemInputData[0] = IOOperations.parseVehicleStateToCode(itemDepartureState.getSelectedItem().toString().toLowerCase());
        itemInputData[1] = IOOperations.sanitizeInput(itemDepartureOwnerID.getText().toString());
        itemInputData[2] = IOOperations.sanitizeInput(itemDepartureIdentifiquer.getText().toString());

        // Validar si los campos están completos
        if (IOOperations.validateNonEmptyFields(this, itemInputData, fields)) {
            // Procesar el check-out del vehículo
            if (new BusinessModel().checkOut(this, itemInputData, fields)) {
                // Confirmar si se desea generar factura
                String[] options = {"Sí", "No"};
                int action = JOptionPane.showOptionDialog(
                        this,
                        "¿Desea generar factura?",
                        "Confirmar",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        options,
                        options[0]
                );

                if (action == JOptionPane.YES_OPTION) {
                    try {
                        // Buscar los datos del vehículo en la base de datos
                        Item item = new Item();
                        String[] vehicleData = item.searchItem(itemInputData[2]);

                        // Verificar si se encontraron los datos del vehículo
                        if (vehicleData == null || vehicleData.length == 0) {
                            JOptionPane.showMessageDialog(this, "No se encontraron datos del vehículo.", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        // Obtener datos del negocio
                        Printing printingMethods = new Printing();
                        printingMethods.getBusinessData();

                        // Generar e imprimir la factura
                        printingMethods.print(vehicleData);
                    } catch (Exception e) {
                        // Manejo de excepciones para evitar caídas inesperadas
                        JOptionPane.showMessageDialog(this, "Ocurrió un error al generar la factura: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                }
            }
        }

    }//GEN-LAST:event_itemDepartureButtonActionPerformed

    private void itemDepartureOwnerIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemDepartureOwnerIDFocusGained
        String placeholder = "Documento del cliente";

        // Eliminar el placeholder al ganar foco
        if (itemDepartureOwnerID.getText().equals(placeholder)) {
            itemDepartureOwnerID.setText("");
            itemDepartureOwnerID.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemDepartureOwnerIDFocusGained

    private void itemDepartureOwnerIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemDepartureOwnerIDFocusLost
        String placeholder = "Documento del cliente";

        // Restaurar el placeholder si el campo está vacío
        if (itemDepartureOwnerID.getText().isEmpty()) {
            itemDepartureOwnerID.setText(placeholder);
            itemDepartureOwnerID.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemDepartureOwnerIDFocusLost

    private void itemDepartureIdentifiquerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemDepartureIdentifiquerFocusGained
        String placeholder = "Identificador del producto";

        // Eliminar el placeholder al ganar foco
        if (itemDepartureIdentifiquer.getText().equals(placeholder)) {
            itemDepartureIdentifiquer.setText("");
            itemDepartureIdentifiquer.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemDepartureIdentifiquerFocusGained

    private void itemDepartureIdentifiquerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemDepartureIdentifiquerFocusLost
        String placeholder = "Identificador del producto";

        // Restaurar el placeholder si el campo está vacío
        if (itemDepartureIdentifiquer.getText().isEmpty()) {
            itemDepartureIdentifiquer.setText(placeholder);
            itemDepartureIdentifiquer.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemDepartureIdentifiquerFocusLost

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        DashboardUI dashboard = new DashboardUI();
        dashboard.setVisible(true);
        dashboard.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_goBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemCheckOutUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemCheckOutUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemCheckOutUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemCheckOutUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemCheckOutUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JPanel branding;
    private javax.swing.JLabel developerLabel;
    private javax.swing.JButton goBackButton;
    private javax.swing.JButton itemDepartureButton;
    private javax.swing.JTextField itemDepartureIdentifiquer;
    private javax.swing.JTextField itemDepartureOwnerID;
    private javax.swing.JComboBox<String> itemDepartureState;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel vehicleCheckInTitleLabel;
    // End of variables declaration//GEN-END:variables
}
