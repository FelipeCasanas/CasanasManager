/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userInterface;

import javax.swing.JOptionPane;
import corePackage.BusinessModel;
import corePackage.User;
import generalUtility.IOOperations;
import java.awt.Color;
import java.util.ArrayList;
import java.util.function.Function;
import javax.swing.JComboBox;
import network.QueryManagment;

/**
 *
 * @author Felipe
 */
public class ItemCheckInUI extends javax.swing.JFrame {

    public ItemCheckInUI() {
        initComponents();

        setRateTypeSelector();
        setColorSelector();
        setStateSelector();

        itemOwnerID.setText("Documento del cliente");
        itemOwnerID.setForeground(Color.GRAY);

        itemIdentifiquer.setText("Identificador del producto");
        itemIdentifiquer.setForeground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        vehicleCheckInTitleLabel = new javax.swing.JLabel();
        itemTypeSelector = new javax.swing.JComboBox<>();
        itemColorSelector = new javax.swing.JComboBox<>();
        itemStateSelector = new javax.swing.JComboBox<>();
        itemOwnerID = new javax.swing.JTextField();
        itemIdentifiquer = new javax.swing.JTextField();
        itemEntryButton = new javax.swing.JButton();
        goBackButton = new javax.swing.JButton();
        developerLabel = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        vehicleCheckInTitleLabel.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 20)); // NOI18N
        vehicleCheckInTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehicleCheckInTitleLabel.setText("ENTRADA ARTICULO");

        itemTypeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        itemColorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        itemStateSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        itemOwnerID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemOwnerID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemOwnerIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemOwnerIDFocusLost(evt);
            }
        });

        itemIdentifiquer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemIdentifiquer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemIdentifiquerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemIdentifiquerFocusLost(evt);
            }
        });

        itemEntryButton.setText("INGRESAR");
        itemEntryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEntryButtonActionPerformed(evt);
            }
        });

        goBackButton.setText("<-");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        developerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        developerLabel.setText("CASANAS SOFTWARE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vehicleCheckInTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(developerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemStateSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemColorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemEntryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(itemIdentifiquer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(itemOwnerID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleCheckInTitleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemOwnerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemIdentifiquer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemColorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(itemEntryButton))
                    .addComponent(itemStateSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(goBackButton)
                    .addComponent(developerLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        DashboardUI dashboard = new DashboardUI();
        dashboard.setVisible(true);
        dashboard.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void setSelector(JComboBox<String> selector, ArrayList<Object> data, int index) {
        ArrayList<String> names = (ArrayList<String>) data.get(index);

        if (names != null && !names.isEmpty()) {
            names.forEach(name -> selector.addItem(name.toUpperCase()));
        } else {
            System.out.println("No se encontraron elementos para agregar al selector.");
        }
    }

    private void setRateTypeSelector() {
        QueryManagment queryManagment = new QueryManagment();
        ArrayList<Object> ratesData = queryManagment.getRatesName(User.getBusiness_id());
        setSelector(itemTypeSelector, ratesData, 1);
    }

    private void setColorSelector() {
        QueryManagment queryManagment = new QueryManagment();
        ArrayList<Object> colors = queryManagment.getColorsName();
        setSelector(itemColorSelector, colors, 1);
    }

    private void setStateSelector() {
        QueryManagment queryManagment = new QueryManagment();
        ArrayList<Object> states = queryManagment.getStatesName();
        setSelector(itemStateSelector, states, 1);
    }

    private String[] getAndParseComboboxData() {
        String[] itemInputData = new String[5];

        // Procesa cada dato del comboBox y los campos de texto, convirtiéndolos a su código o valor correspondiente
        itemInputData[0] = parseAndConvert(itemTypeSelector, IOOperations::parseVehicleTypeToCode);
        itemInputData[1] = parseAndConvert(itemColorSelector, IOOperations::parseVehicleColorToCode);
        itemInputData[2] = parseAndConvert(itemStateSelector, IOOperations::parseVehicleStateToCode);
        itemInputData[3] = IOOperations.sanitizeInput(itemOwnerID.getText().toString());
        itemInputData[4] = IOOperations.sanitizeInput(itemIdentifiquer.getText().toString());

        return itemInputData;
    }

    private String parseAndConvert(JComboBox<String> selector, Function<String, String> parser) {
        String selectedItem = (String) selector.getSelectedItem();
        return selectedItem != null ? parser.apply(selectedItem.toLowerCase()) : "";
    }


    private void itemEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEntryButtonActionPerformed
        // Definir los campos a verificar y los datos a ingresar
        String[] fields = {"tipo", "color", "estado", "cedula", "placa"};
        String[] itemInputData = getAndParseComboboxData();

        // Validar que no haya campos vacíos
        if (IOOperations.validateNonEmptyFields(this, itemInputData, fields)) {
            new BusinessModel().checkIn(this, itemInputData, fields);
        }
    }//GEN-LAST:event_itemEntryButtonActionPerformed

    private void itemOwnerIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemOwnerIDFocusGained
        String placeholder = "Documento del cliente";

        // Eliminar el placeholder al ganar foco
        if (itemOwnerID.getText().equals(placeholder)) {
            itemOwnerID.setText("");
            itemOwnerID.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemOwnerIDFocusGained

    private void itemOwnerIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemOwnerIDFocusLost
        String placeholder = "Documento del cliente";

        // Restaurar el placeholder si el campo está vacío
        if (itemOwnerID.getText().isEmpty()) {
            itemOwnerID.setText(placeholder);
            itemOwnerID.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemOwnerIDFocusLost

    private void itemIdentifiquerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemIdentifiquerFocusGained
        String placeholder = "Identificador del producto";

        // Eliminar el placeholder al ganar foco
        if (itemIdentifiquer.getText().equals(placeholder)) {
            itemIdentifiquer.setText("");
            itemIdentifiquer.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemIdentifiquerFocusGained

    private void itemIdentifiquerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemIdentifiquerFocusLost
        String placeholder = "Identificador del producto";

        // Restaurar el placeholder si el campo está vacío
        if (itemIdentifiquer.getText().isEmpty()) {
            itemIdentifiquer.setText(placeholder);
            itemIdentifiquer.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_itemIdentifiquerFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemCheckInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemCheckInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemCheckInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemCheckInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemCheckInUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel developerLabel;
    private javax.swing.JButton goBackButton;
    private javax.swing.JComboBox<String> itemColorSelector;
    private javax.swing.JButton itemEntryButton;
    private javax.swing.JTextField itemIdentifiquer;
    private javax.swing.JTextField itemOwnerID;
    private javax.swing.JComboBox<String> itemStateSelector;
    private javax.swing.JComboBox<String> itemTypeSelector;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel vehicleCheckInTitleLabel;
    // End of variables declaration//GEN-END:variables
}
