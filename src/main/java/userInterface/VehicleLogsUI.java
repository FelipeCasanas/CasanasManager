/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userInterface;

import abstractModel.ManageTable;
import network.QueryManagment;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import generalUtility.SearchDiscriminant;
import generalUtility.IOOperations;

/**
 *
 * @author Felipe
 */
public class VehicleLogsUI extends javax.swing.JFrame implements ManageTable {

    public VehicleLogsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        vehicleLogsTitleLabel = new javax.swing.JLabel();
        filtersAndSortContainer = new javax.swing.JPanel();
        filtersHeader = new javax.swing.JLabel();
        vehicleTypeSelector = new javax.swing.JComboBox<>();
        vehicleStateSelector = new javax.swing.JComboBox<>();
        vehicleCheckoutBySelector = new javax.swing.JComboBox<>();
        searchLogs = new javax.swing.JButton();
        logsContainer = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        logsView = new javax.swing.JScrollPane();
        logsViewTable = new javax.swing.JTable();
        addLogsPane = new javax.swing.JPanel();
        goBackButton = new javax.swing.JButton();
        developerLabel = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        vehicleLogsTitleLabel.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 20)); // NOI18N
        vehicleLogsTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehicleLogsTitleLabel.setText("REGISTROS");

        filtersHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        filtersHeader.setText("FILTROS Y ORDENAMIENTO");

        vehicleTypeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "CARRO", "MOTO", "BICICLETA"}));

        vehicleStateSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "OK", "RAYON(ES)", "GOLPE(S)", "DESCONOCIDO" }));

        vehicleCheckoutBySelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        searchLogs.setText("BUSCAR");
        searchLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLogsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filtersAndSortContainerLayout = new javax.swing.GroupLayout(filtersAndSortContainer);
        filtersAndSortContainer.setLayout(filtersAndSortContainerLayout);
        filtersAndSortContainerLayout.setHorizontalGroup(
            filtersAndSortContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filtersHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtersAndSortContainerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(filtersAndSortContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vehicleCheckoutBySelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehicleStateSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehicleTypeSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchLogs, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
        );
        filtersAndSortContainerLayout.setVerticalGroup(
            filtersAndSortContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtersAndSortContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filtersHeader)
                .addGap(33, 33, 33)
                .addComponent(vehicleTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vehicleStateSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vehicleCheckoutBySelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchLogs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        logsContainer.setBackground(new java.awt.Color(0, 153, 255));

        logsViewTable.setAutoCreateRowSorter(true);
        logsViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TIPO", "COLOR", "ESTADO", "ESTADO SALIDA", "ENTRADA POR", "SALIDA POR", "DUEÃ‘O", "PLACA", "HORA ENTRADA", "HORA SALIDA", "COBRO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        logsViewTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logsViewTable.setShowGrid(true);
        logsViewTable.getTableHeader().setReorderingAllowed(false);
        logsView.setViewportView(logsViewTable);
        if (logsViewTable.getColumnModel().getColumnCount() > 0) {
            logsViewTable.getColumnModel().getColumn(0).setResizable(false);
            logsViewTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            logsViewTable.getColumnModel().getColumn(1).setResizable(false);
            logsViewTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            logsViewTable.getColumnModel().getColumn(2).setResizable(false);
            logsViewTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            logsViewTable.getColumnModel().getColumn(3).setResizable(false);
            logsViewTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            logsViewTable.getColumnModel().getColumn(4).setResizable(false);
            logsViewTable.getColumnModel().getColumn(4).setPreferredWidth(50);
            logsViewTable.getColumnModel().getColumn(5).setResizable(false);
            logsViewTable.getColumnModel().getColumn(5).setPreferredWidth(50);
            logsViewTable.getColumnModel().getColumn(6).setResizable(false);
            logsViewTable.getColumnModel().getColumn(6).setPreferredWidth(50);
            logsViewTable.getColumnModel().getColumn(7).setResizable(false);
            logsViewTable.getColumnModel().getColumn(7).setPreferredWidth(50);
            logsViewTable.getColumnModel().getColumn(8).setResizable(false);
            logsViewTable.getColumnModel().getColumn(8).setPreferredWidth(30);
            logsViewTable.getColumnModel().getColumn(9).setResizable(false);
            logsViewTable.getColumnModel().getColumn(10).setResizable(false);
            logsViewTable.getColumnModel().getColumn(11).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logsView, javax.swing.GroupLayout.DEFAULT_SIZE, 1147, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logsView, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE))
        );

        logsContainer.addTab("REGISTROS", jPanel1);

        javax.swing.GroupLayout addLogsPaneLayout = new javax.swing.GroupLayout(addLogsPane);
        addLogsPane.setLayout(addLogsPaneLayout);
        addLogsPaneLayout.setHorizontalGroup(
            addLogsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1159, Short.MAX_VALUE)
        );
        addLogsPaneLayout.setVerticalGroup(
            addLogsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 577, Short.MAX_VALUE)
        );

        logsContainer.addTab("AGREGAR REGISTRO", addLogsPane);

        goBackButton.setText("<-");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        developerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        developerLabel.setText("CASANAS SOFTWARE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vehicleLogsTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(developerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filtersAndSortContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logsContainer)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleLogsTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logsContainer)
                    .addComponent(filtersAndSortContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(goBackButton)
                    .addComponent(developerLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        DashboardUI dashboard = new DashboardUI();
        dashboard.setVisible(true);
        dashboard.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void searchLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLogsActionPerformed
        String[][] logsData = requestLogsData();
        fillTable(logsData);
    }//GEN-LAST:event_searchLogsActionPerformed

    private String[][] requestLogsData() {
        //Declara array de 3 campos para los criterios: (1)Tipo vehiculo (2)Estado vehiculo (3)Salida por
        String[] fields = new String[3];

        //Obtiene tipo de vehiculo
        fields[0] = vehicleTypeSelector.getSelectedItem().toString();
        //Obtiene el estado del vehiculo
        fields[1] = vehicleStateSelector.getSelectedItem().toString();
        //Obtiene usuario que dio salida
        fields[2] = vehicleCheckoutBySelector.getSelectedItem().toString();

        //Se ingresa los campos  y retorna en array booleano de los que van a ser actualizados
        SearchDiscriminant searchDiscriminant = new SearchDiscriminant();
        Boolean[] notEmptyFields = searchDiscriminant.notEmptyFields(fields);

        //Parsea fields de texto a su numero ID
        IOOperations stringsMethods = new IOOperations();
        fields[0] = stringsMethods.parseVehicleTypeToCode(fields[0]);
        fields[1] = stringsMethods.parseVehicleStateToCode(fields[1]);

        //Llama metodo para obtener los registros de la base de datos
        QueryManagment queryManagment = new QueryManagment();
        String[][] logsData = queryManagment.queryLogs(notEmptyFields, fields);

        return logsData;
    }

    @Override
    public void fillTable(String[][] logsData) {
        //Si la matriz con los datos esta vacia indica que no se encontraron registros; Si no esta vacio imprime los datos
        if (logsData != null) {
            //Obtiene el largo de la matriz
            int range = logsData.length;

            //Instancia la clase con el modelo de la tabla
            DefaultTableModel tableModel = (DefaultTableModel) logsViewTable.getModel();

            //Limpia la tabla para eliminar elementos anteriores (En caso que los tenga)
            clearTable(tableModel);

            //Imprime las columnas de la matriz e itera en 1 para repetir el proceso imprimiendo la siguiente fila
            for (int row = 0; row < range; row++) {
                tableModel.addRow(new Object[]{logsData[row][0], logsData[row][1], logsData[row][2], logsData[row][3], logsData[row][4], logsData[row][5], logsData[row][6], logsData[row][7], logsData[row][8], logsData[row][9], logsData[row][10], "$" + logsData[row][11]});
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron registros");
        }
    }

    @Override
    public void clearTable(DefaultTableModel tableModel) {
        //Obtiene la cantidad de filas de la tabla y lo guarda en rowsCount
        int rowsCount = tableModel.getRowCount();

        //Inicia bucle desde la cantidad de filas-1 hasta que llega a 0 (Bucle decrementable)
        for (int i = rowsCount - 1; i >= 0; i--) {
            //Elimina la fila en la posicion de i
            tableModel.removeRow(i);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleLogsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleLogsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleLogsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleLogsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleLogsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addLogsPane;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel developerLabel;
    private javax.swing.JPanel filtersAndSortContainer;
    private javax.swing.JLabel filtersHeader;
    private javax.swing.JButton goBackButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTabbedPane logsContainer;
    private javax.swing.JScrollPane logsView;
    private javax.swing.JTable logsViewTable;
    private javax.swing.JButton searchLogs;
    private javax.swing.JComboBox<String> vehicleCheckoutBySelector;
    private javax.swing.JLabel vehicleLogsTitleLabel;
    private javax.swing.JComboBox<String> vehicleStateSelector;
    private javax.swing.JComboBox<String> vehicleTypeSelector;
    // End of variables declaration//GEN-END:variables

}
