/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package graphics;

import connection.QueryManagment;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import managmentCore.UserManagment;
import utilities.EmptyPlaces;
import utilities.FormatDate;

/**
 *
 * @author Felipe
 */
public class VehicleCheckIn extends javax.swing.JFrame {

    /**
     * Creates new form VehicleCheckIn
     */
    public VehicleCheckIn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        vehicleCheckInTitleLabel = new javax.swing.JLabel();
        vehiclesEntryVehicleType = new javax.swing.JComboBox<>();
        vehiclesEntryVehicleColor = new javax.swing.JComboBox<>();
        vehiclesEntryVehicleState = new javax.swing.JComboBox<>();
        vehiclesEntryOwnerID = new javax.swing.JTextField();
        vehiclesEntryCarPlate = new javax.swing.JTextField();
        vehiclesEntryButton = new javax.swing.JButton();
        goBackButton = new javax.swing.JButton();
        developerLabel = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        vehicleCheckInTitleLabel.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 20)); // NOI18N
        vehicleCheckInTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehicleCheckInTitleLabel.setText("INGRESO VEHICULAR");

        vehiclesEntryVehicleType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        vehiclesEntryVehicleColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        vehiclesEntryVehicleState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        vehiclesEntryOwnerID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        vehiclesEntryCarPlate.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        vehiclesEntryButton.setText("INGRESAR");
        vehiclesEntryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiclesEntryButtonActionPerformed(evt);
            }
        });

        goBackButton.setText("<-");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        developerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        developerLabel.setText("CASANAS SOFTWARE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vehicleCheckInTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(developerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vehiclesEntryVehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vehiclesEntryVehicleState, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vehiclesEntryVehicleColor, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(vehiclesEntryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vehiclesEntryCarPlate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vehiclesEntryOwnerID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleCheckInTitleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehiclesEntryVehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vehiclesEntryOwnerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vehiclesEntryCarPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vehiclesEntryVehicleColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(vehiclesEntryButton))
                    .addComponent(vehiclesEntryVehicleState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(goBackButton)
                    .addComponent(developerLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        dashboard.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void vehiclesEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiclesEntryButtonActionPerformed
        EmptyPlaces emptyPlaces = new EmptyPlaces();
        String[] vehicleData = new String[5], places = {"tipo", "color", "estado", "cedula", "placa"};

        vehicleData[0] = vehiclesEntryVehicleType.getSelectedItem().toString();
        vehicleData[1] = vehiclesEntryVehicleColor.getSelectedItem().toString();
        vehicleData[2] = vehiclesEntryVehicleState.getSelectedItem().toString();
        vehicleData[3] = vehiclesEntryOwnerID.getText().toString().toLowerCase().trim();
        vehicleData[4] = vehiclesEntryCarPlate.getText().toString().toLowerCase().trim();

        try {
            boolean isEmpty = emptyPlaces.validateEmptyPlaces(vehicleData, places, this, 5);

            if (!isEmpty) {
                //Realiza consulta de busqueda en base de datos
                //Valida si existe una coincidencia de vehiculo (MISMA PLACA Y QUE NO HAYA SALIDO)
                QueryManagment queryManagment = new QueryManagment();
                boolean vehicleExists = queryManagment.vehicleStillHere(vehicleData[4]);
                
                if (vehicleExists) {
                    JOptionPane.showMessageDialog(this, "El vehiculo ya se encuentra en el parqueadero");
                } else {
                    int checkIn = JOptionPane.showConfirmDialog(this, "Esta seguro que desea hacer el ingreso?");

                    if (checkIn == 0) {
                        //Obtiene el id del trabajador en turno
                        UserManagment userManagment = new UserManagment();
                        int userId = userManagment.getId();
                        
                        //Obtiene la fecha y hora actual (EN ESTE CASO PARA CHECKIN)
                        FormatDate formatter = new FormatDate();
                        String formattedDate = formatter.format();
                        
                        //Intenta hacer consulta de insercion, si retorna verdadero se logro; en caco contrario no
                        boolean vehicleInserted = queryManagment.insertVehicle(vehicleData, userId, formattedDate);
                        
                        if(vehicleInserted) {
                            JOptionPane.showMessageDialog(this, "Se realizo el ingreso");
                        } else {
                            JOptionPane.showMessageDialog(this, "ERROR, no se pudo ingresar el vehiculo");
                        }
                    }
                }

            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_vehiclesEntryButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleCheckIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel developerLabel;
    private javax.swing.JButton goBackButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel vehicleCheckInTitleLabel;
    private javax.swing.JButton vehiclesEntryButton;
    private javax.swing.JTextField vehiclesEntryCarPlate;
    private javax.swing.JTextField vehiclesEntryOwnerID;
    private javax.swing.JComboBox<String> vehiclesEntryVehicleColor;
    private javax.swing.JComboBox<String> vehiclesEntryVehicleState;
    private javax.swing.JComboBox<String> vehiclesEntryVehicleType;
    // End of variables declaration//GEN-END:variables
}
